"""
Django settings for abn project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import dj_database_url
from pathlib import Path
import os
import cloudinary
import cloudinary.uploader
import cloudinary.api

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")
# db8145e2d89f48d2e0a8abe078b7e9d7

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "False").lower() == "false"

ALLOWED_HOSTS = ['abn-realtors.onrender.com', 'localhost', '127.0.0.1', 'www.abnrealtorsgroup.com']


# Application definition

INSTALLED_APPS = [
    "pages.apps.PagesConfig",
    "listings.apps.ListingsConfig",
    "accounts.apps.AccountsConfig",
    "contacts.apps.ContactsConfig",
    "landlistings.apps.LandlistingsConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    "cloudinary"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = "abn.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],  # Make sure this path is correct ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "abn.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        default='postgresql://postgres.pzsdfbwddmonlwxvlktf:OM4dENYZUfmSsU0k@aws-0-ap-south-1.pooler.supabase.com:6543/postgres',
        conn_max_age=600,
        ssl_require=True  # Ensure SSL is required
    )
}



# postgresql://abndb_ho6t_user:OdPEoQknXZIQSM63WMnVO9KZyMxvbrMM@dpg-cqs8uu0gph6c73a8dum0-a.oregon-postgres.render.com/abndb_ho6t

# database_url = os.environ.get("DATABASE_URL")
# if database_url:
# DATABASES["default"] = dj_database_url.parse("postgresql://abndb_ho6t_user:OdPEoQknXZIQSM63WMnVO9KZyMxvbrMM@dpg-cqs8uu0gph6c73a8dum0-a.oregon-postgres.render.com/abndb_ho6t")



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'abn/static')
]

# Media folder settings To enable images to show up you do this below then go to urls.py at the btre folder
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.ERROR: "danger"
} 

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
EMAIL_USE_SSL=True # Secure Sockets Layer and TLS Transport Layer Security
# DEFAULT_FROM_EMAIL = "MY APP"
EMAIL_HOST_USER="chinemeremokpara93@gmail.com"
EMAIL_HOST_PASSWORD="sjjv gzyd skqs ukge"

cloudinary.config( 
  cloud_name = "dystjcg1j", 
  api_key = "716197218755935", 
  api_secret = "Fq1AYvBjvSZy7M6rSbY8W9ABDWo" 
)